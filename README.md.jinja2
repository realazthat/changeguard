<!--
{% set project_name='changeguard' %}
{% set project_name_proper='ChangeGuard' %}
{% set last_unstable_release=shell('tomlq -r -e \'.["tool"]["changeguard-project-metadata"]["last_unstable_release"]\' pyproject.toml',
                                   include_args=False) | trim %}
{% set last_stable_release=shell('tomlq -r -e \'.["tool"]["changeguard-project-metadata"]["last_stable_release"]\' pyproject.toml',
                                 include_args=False) | trim %}
{% set tested_python_versions=shell('python -m yq -r -c \'[.jobs["build-and-test"]["strategy"]["matrix"]["python-version"][].gh] | join(", ")\' .github/workflows/build-and-test.yml',
                                 include_args=False) | trim %}
-->

# {{project_name_proper}}

![Top language][1] ![GitHub License][2] [![PyPI - Version][3]][4]
[![Python Version][5]][4]

|         | Status                     | Stable                    | Unstable                  |                    |
| ------- | -------------------------- | ------------------------- | ------------------------- | ------------------ |
| Master  | [![Build and Test][6]][7]  | [![since tagged][8]][9]   |                           | ![last commit][10] |
| Develop | [![Build and Test][11]][7] | [![since tagged][12]][13] | [![since tagged][14]][15] | ![last commit][16] |

CLI to check if your repository/directory files have changed over the span of a
script.

## What

Like hashdeep, but customized to check if any of the original files in a
repository/directory change over the course of a precommit script.

## Features

- Can use any sha256sum-like command (uses xxhash by default).
- Use `.changeguard-ignore` to ignore files that should not be checked for
  changes.

## Install

```bash
# Install from pypi (https://pypi.org/project/{{project_name}}/)
pip install {{project_name}}

# Install from git (https://github.com/realazthat/{{project_name}})
pip install git+https://github.com/realazthat/{{project_name}}.git@v{{last_stable_release}}
```

## ðŸ’» Command Line Options

<!--{{ shell('python -m changeguard.cli --help',
             rich='README.help.generated.svg',
             rich_alt='Output of `python -m changeguard.cli --help`',
             rich_bg_color='black',
             rich_term='xterm-256color',
             rich_cols=160,
             decomentify='nl') }}-->

## Requirements

- Python 3.8+
  - Why: Some dev dependencies require Python 3.8+.

### Tested on

- WSL2 Ubuntu 20.04, Python `{{rawsnippet('./.python-version') | trim}}`.
- Ubuntu 20.04, Python `{{tested_python_versions}}`, tested in GitHub Actions
  workflow ([build-and-test.yml](./.github/workflows/build-and-test.yml)).

## Contributions

### Development environment: Linux-like

- For running `pre.sh` (Linux-like environment).

  - From {{path('./.github/dependencies.yml', link='md')}}, which is used for
    the GH Action to do a fresh install of everything:

    {{shell('python -m yq --yaml-output  \'.dev\' .github/dependencies.yml',
    include_args=False,
    backtickify='yaml',
    indented=4
    )}}

  - Requires `pyenv`, or an exact matching version of python as in
    [`{{path('.python-version')}}`](./.python-version).
  - `nvm` for prettier (markdown formatting).
  - `act` (to run the GH Action locally):
    - Requires `nodejs`.
    - Requires `Go`.
    - `docker`.
  - Generate animation:
    - `docker`.

### Commit Process

1. (Optionally) Fork the `develop` branch.
2. Stage your files: `git add path/to/file.py`.
3. `bash scripts/pre.sh`, this will format, lint, and test the code.
4. `git status` check if anything changed (generated `{{path('README.md')}}` for
   example), if so, `git add` the changes, and go back to the previous step.
5. `git commit -m "..."`.
6. Make a PR to `develop` (or push to develop if you have the rights).

## Release Process

These instructions are for maintainers of the project.

1. In the `develop` branch, run `bash {{path('scripts/pre.sh')}}` to ensure
   everything is in order.
2. In the `develop` branch, bump the version in `{{path('pyproject.toml')}}`,
   following semantic versioning principles. Also modify the
   `last_unstable_release` and `last_stable_release` in the
   `[tool.{{project_name}}-project-metadata]` table as appropriate.
3. In the `develop` branch, commit these changes with a message like "Prepare
   release X.Y.Z". (See the contributions section [above](#commit-process)).
4. Merge the `develop` branch into the `master` branch:
   `git checkout master && git merge develop --no-ff`.
5. `master` branch: Tag the release: Create a git tag for the release with
   `git tag -a vX.Y.Z -m "Version X.Y.Z"`.
6. Publish to PyPI: Publish the release to PyPI with
   `bash scripts/deploy-to-pypi.sh`.
7. Push to GitHub: Push the commit and tags to GitHub with
   `git push && git push --tags`.
8. The `--no-ff` option adds a commit to the master branch for the merge, so
   refork the develop branch from the master branch:
   `git checkout develop && git merge master`.
9. Push the develop branch to GitHub: `git push origin develop`.

[1]:
  https://img.shields.io/github/languages/top/realazthat/{{project_name}}.svg?&cacheSeconds=28800
[2]: https://img.shields.io/github/license/realazthat/{{project_name}}
[3]: https://img.shields.io/pypi/v/{{project_name}}
[4]: https://pypi.org/project/{{project_name}}/
[5]: https://img.shields.io/pypi/pyversions/{{project_name}}
[6]:
  https://github.com/realazthat/{{project_name}}/actions/workflows/build-and-test.yml/badge.svg?branch=master
[7]:
  https://github.com/realazthat/{{project_name}}/actions/workflows/build-and-test.yml
[8]:
  https://img.shields.io/github/commits-since/realazthat/{{project_name}}/v{{last_stable_release}}/master
[9]:
  https://github.com/realazthat/{{project_name}}/compare/v{{last_stable_release}}...master
[10]:
  https://img.shields.io/github/last-commit/realazthat/{{project_name}}/master
[11]:
  https://github.com/realazthat/{{project_name}}/actions/workflows/build-and-test.yml/badge.svg?branch=develop
[12]:
  https://img.shields.io/github/commits-since/realazthat/{{project_name}}/v{{last_stable_release}}/develop
[13]:
  https://github.com/realazthat/{{project_name}}/compare/v{{last_stable_release}}...develop
[14]:
  https://img.shields.io/github/commits-since/realazthat/{{project_name}}/v{{last_unstable_release}}/develop
[15]:
  https://github.com/realazthat/{{project_name}}/compare/v{{last_unstable_release}}...develop
[16]:
  https://img.shields.io/github/last-commit/realazthat/{{project_name}}/develop
